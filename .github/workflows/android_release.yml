name: Android Release Build

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.4' # Replace with your desired Flutter version
          channel: 'stable' # Or 'beta', 'dev' as needed

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 17

      - name: Set up Android NDK
        uses: android-actions/setup-android@v3
        
      - name: Accept Android Licenses
        run: yes | sdkmanager --licenses || true

      - run: flutter pub get
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build mycelmob
        run: bash build-android.sh
        working-directory: mycelmob



      - name: Build APK
        run: flutter build apk --release
      
      - name: rename APK
        run: mv ./build/app/outputs/flutter-apk/app-release.apk ./build/app/outputs/flutter-apk/myceliumflut-${{ github.event.release.tag_name }}.apk
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE event above, providing the upload URL for the assets.
          asset_path: ./build/app/outputs/flutter-apk/myceliumflut-${{ github.event.release.tag_name }}.apk
          asset_name: myceliumflut-${{ github.event.release.tag_name }}.apk
          asset_content_type: application/vnd.android.package-archive
